#pragma checksum "E:\SUENWORK\SUEN\SliceFileDemo\SliceFileUpload\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d70dcc8f9e5176bc585929f4674ed0de70cec811"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\SUENWORK\SUEN\SliceFileDemo\SliceFileUpload\Views\_ViewImports.cshtml"
using SliceFileUpload;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\SUENWORK\SUEN\SliceFileDemo\SliceFileUpload\Views\_ViewImports.cshtml"
using SliceFileUpload.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d70dcc8f9e5176bc585929f4674ed0de70cec811", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"115e116b4bb20d25aa34f4243adbaa0e790261de", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\SUENWORK\SUEN\SliceFileDemo\SliceFileUpload\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""text-center"">
    <h1 class=""display-4"">Slice File Upload Demo</h1>
    <input type=""file"" id=""fileUpload"" name=""SeclectFiles"">
    <button type=""button"" class=""btn btn-primary"" data-loading-text=""Loading..."" id=""upload"">上传文件</button>
    <h1 id=""show"">0%</h1>
</div>
<script type=""text/javascript"">
    window.onload = function () {
        (function ($) {
            // set btn loading text
            var Show = function (text) {
                $(""#show"").text(text + ""%"");
            }
            // 上传
            var btnClick = function () {
                getFile();
            };
            // 获取文件
            var getFile = function () {
                var files = $(""#fileUpload"").prop(""files"");//获取文件列表
                if (!files || files.length <= 0) {
                    throw ""文件不存在！""
                }
                fileReader(files, Slice);
            }
            // 文件流
            var bufToBlob = function (buf, mimeType = """") {
                return ");
            WriteLiteral(@"new Blob([buf], { type: mimeType });
            }
            var fileReader = function (files,callback) {
                for (var i = 0; i < files.length; i++) {
                    var reader = new FileReader();
                    var file = files[i];
                    reader.readAsArrayBuffer(files[i]);
                    reader.onload = function (files) {
                        var filesblob = bufToBlob(this.result, file.type);
                        debugger
                        if (typeof callback == 'function') {
                            callback(filesblob, file);
                        }
                    };
                }
            }
            // 二进制大刀
            var blobSlice = function (blob, start, end, type) {
                type = type || blob.type;
                if (blob.slice) {
                    return blob.slice(start, end,type);
                } else if (blob.mozSlice) { // 兼容firefox
                    return blob.mozSlice(start, end,typ");
            WriteLiteral(@"e);
                } else if (blob.webkitSlice) { // 兼容webkit
                    return blob.webkitSlice(start, end, type);
                } else {
                    throw ""slice error!!!""
                }
            }
            // 二进制切片
            var Slice = function (blob, file) {
                var fileData = {
                    fileKey: new Date().getTime(), 
                    sliceSize: 1024 * 500,//500KB
                    size: file.size,
                    fileName: file.name,
                    fileType: file.type,
                    chunkIndex: 0,
                    chunk: null
                }
                var startByte = 0, endByte = 0;
                var Cutting = function (sendSlice) {
                    if (startByte < fileData.size) {
                        // >chunk
                        var bSlice = function () {
                            fileData.chunkIndex++;
                            fileData.chunk = blobSlice(blob, startByte, endB");
            WriteLiteral(@"yte);
                            if (typeof sendSlice == ""function"") {
                                sendSlice(fileData);
                            }
                            startByte = endByte;
                            if (endByte < fileData.size) {
                                Cutting(sendSlice);
                            }
                        }
                        if ((startByte + fileData.sliceSize) <= fileData.size) {
                            endByte = startByte + fileData.sliceSize;
                            bSlice();
                        }
                        // <chunk
                        if (startByte < fileData.size) {
                            endByte = fileData.size;
                            bSlice();
                        }
                    }
                }
                Cutting(SendBlob); //每片上传服务器
            };
            // 发送切片数据
            var SendBlob = async function (chunk) {
                console.log(chun");
            WriteLiteral(@"k.chunkIndex);
                console.log(chunk.chunk);
            }
            $(""#upload"").on(""click"", btnClick);
            if (!(window.File || window.FileReader || window.FileList || window.Blob)) {
                throw ""用Chrome浏览器!!"";
            }
        })(jQuery);
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
